variables:
  CI_IMAGE: registry.gitlab.com/gitlab-org/gitlab-runner/ci:1.13.8-10
  GOROOT: /usr/local/go
  # Following variables are used in some jobs to install specified software
  RELEASE_INDEX_GEN_VERSION: "latest"
  DOCKER_VERSION: 19.03.5
  DOCKER_MACHINE_VERSION: "0.16.2"
  BUILDX_VERSION: 0.3.1
  KUBECTL_VERSION: 1.18.0
  AWS_CLI_VERSION: 2.1.6
  PWSH_VERSION: 7.1.1
  DUMB_INIT_VERSION: "1.2.2"
  GIT_VERSION: "2.27.0"
  GIT_VERSION_BUILD: "1"
  GIT_LFS_VERSION: "2.11.0"
  LICENSE_MANAGEMENT_SETUP_CMD: echo "Skip setup. Dependency already vendored"
  DOCS_GITLAB_REPO_SUFFIX: "runner"
  # We're overriding rules for the jobs that we want to run.
  # This will disable all other rules.
  SAST_DISABLED: "true"
  DEPENDENCY_SCANNING_DISABLED: "true"

default:
  image: $CI_IMAGE
  tags:
  - gitlab-org
  retry:
    max: 2
    when:
    - runner_system_failure

before_script:
- unset GPG_KEY

# Skip all jobs except the ones that begin and end with 'docs'.
# Used for commits including ONLY documentation changes.
# https://docs.gitlab.com/ee/development/documentation/index.html#branch-naming
.except_docs:
  except:
    variables:
    - $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /(^docs[\/-].*|.*-docs$)/

# Skip all jobs except the ones that begin and end with 'docs'.
# Used for commits including ONLY documentation changes.
# https://docs.gitlab.com/ee/development/documentation/index.html#branch-naming
.docs:rules:skip:
  rules:
  - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /(^docs[\/-].*|.*-docs$)/'
    when: never
  - when: on_success

.merge_request_pipelines:
  only:
    refs:
    - merge_requests
    - master@gitlab-org/gitlab-runner
    - master@gitlab-org/security/gitlab-runner
    - /\A[0-9]+-[0-9]+-stable\Z/@gitlab-org/gitlab-runner
    - /\A[0-9]+-[0-9]+-stable\Z/@gitlab-org/security/gitlab-runner
    - /\Av[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)?\Z/@gitlab-org/gitlab-runner
    - /\Av[0-9]+\.[0-9]+\.[0-9]+\Z/@gitlab-org/security/gitlab-runner

.runner_master:
  only:
    refs:
    - master@gitlab-org/gitlab-runner
    - master@gitlab-org/security/gitlab-runner

.no_cache:
  cache: {}

.no_dependencies:
  dependencies: []

.no_cache_and_dependencies:
  extends:
  - .no_cache
  - .no_dependencies

.docker:
  extends:
  - .except_docs
  services:
  - name: docker:${DOCKER_VERSION}-dind
    command: ["--experimental"]
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_CERT_PATH: "/certs/client"
  tags:
  - gitlab-org-docker

.docker_qemu-before_script: &docker_qemu-before_script
- docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64

.docker_qemu:
  before_script:
  - *docker_qemu-before_script

.go-cache:
  variables:
    GOCACHE: $CI_PROJECT_DIR/.gocache-$CI_COMMIT_REF_PROTECTED
  before_script:
  - mkdir -p $GOCACHE
  cache:
    paths:
    - $CI_PROJECT_DIR/.gocache-false/
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"

.go-cache-docker-qemu:
  extends:
  - .go-cache
  before_script:
  - *docker_qemu-before_script
  - mkdir -p $GOCACHE

.go-cache-windows:
  variables:
    GOCACHE: $CI_PROJECT_DIR\.gocache-$CI_COMMIT_REF_PROTECTED
  before_script:
  - New-Item -Path $Env:GOCACHE -Type Directory -Force
  cache:
    paths:
    - $CI_PROJECT_DIR\.gocache-false\
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"

.dependency-checksums:
  variables:
    DOCKER_MACHINE_AMD64_CHECKSUM: "a7f7cbb842752b12123c5a5447d8039bf8dccf62ec2328853583e68eb4ffb097"
    DOCKER_MACHINE_ARM64_CHECKSUM: "109f534bfb8b9b852c938cad978e60a86b13f5ecf92da5e24320dacd2a7216ac"
    DUMB_INIT_AMD64_CHECKSUM: "37f2c1f0372a45554f1b89924fbb134fc24c3756efaedf11e07f599494e0eff9"
    DUMB_INIT_ARM64_CHECKSUM: "45b1bbf56cc03edda81e4220535a025bfe3ed6e93562222b9be4471005b3eeb3"
    DUMB_INIT_S390X_CHECKSUM: "8b3808c3c06d008b8f2eeb2789c7c99e0450b678d94fb50fd446b8f6a22e3a9d"
    GIT_LFS_AMD64_CHECKSUM: "46508eb932c2ec0003a940f179246708d4ddc2fec439dcacbf20ff9e98b957c9"
    GIT_LFS_ARM64_CHECKSUM: "ba6a2820d6afcdf94a83c9307bfbabcc2f8146b27404b450c673567798a81f67"
    GIT_LFS_S390X_CHECKSUM: "ca73776cb1cdc855aaf743c09ae70caae97f67d8d5e4147f19dcc4f959f9fc4d"

.windows_base:
  variables:
    PKG_NAMESPACE: gitlab.com\gitlab-org
    PKG_NAME: gitlab-runner
    GOPATH: "$CI_PROJECT_DIR\\.gopath"
    PKG_BASE_DIR: "$CI_PROJECT_DIR\\.gopath\\src\\$PKG_NAMESPACE"
    PKG_BUILD_DIR: "$CI_PROJECT_DIR\\.gopath\\src\\$PKG_NAMESPACE\\$PKG_NAME"

.windows1809_variables:
  variables:
    WINDOWS_VERSION: servercore1809

.windows1809:
  extends:
  - .windows_base
  - .windows1809_variables
  tags:
  - shared-windows
  - windows
  - windows-1809

.windows1903_variables:
  variables:
    WINDOWS_VERSION: servercore1903

.windows1903:
  extends:
  - .windows_base
  - .windows1903_variables
  tags:
  - windows
  - windows-1903

.windows1909_variables:
  variables:
    WINDOWS_VERSION: servercore1909

.windows1909:
  extends:
  - .windows_base
  - .windows1909_variables
  tags:
  - windows
  - windows-1909

.windows2004_variables:
  variables:
    WINDOWS_VERSION: servercore2004

.windows2004:
  extends:
  - .windows_base
  - .windows2004_variables
  tags:
  - windows
  - windows-2004

# .stage_done is used as a sentinel at stage n for stage n-1 completion, so we can kick off builds in later stages
# without explicitly waiting for the completion of the n-1 stage
.stage_done:
  extends:
  - .merge_request_pipelines
  - .no_cache_and_dependencies
  image: alpine:latest
  variables:
    GIT_STRATEGY: none
  script:
  - exit 0
