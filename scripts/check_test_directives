#!/usr/bin/env bash

set -o pipefail

GIT_ROOT=$(cd "${BASH_SOURCE%/*}" && git rev-parse --show-toplevel)
ERROR_RESULTS=0

echo "Check for missing build directives in test files"

pushd "${GIT_ROOT}" >/dev/null

files=$(find . -type f ! -path '*vendor/*' -name '*_test.go' ! -name '*integration_*test.go' ! -name 'helpers_*_test.go')
for f in ${files}; do
  if ! head -n1 "$f" | grep '// +build !integration' >/dev/null; then
    ((ERROR_RESULTS++))
    echo "$f"
  fi
done

files=$(find . -type f ! -path '*vendor/*' -name '*integration_*test.go')
for f in ${files}; do
  if ! head -n1 "$f" | grep '// +build integration' >/dev/null; then
    ((ERROR_RESULTS++))
    echo "$f"
  fi
done

popd >/dev/null

if [ "${ERROR_RESULTS}" -ne 0 ]; then
    echo "âœ– ${ERROR_RESULTS} files missing appropriate build directive. Review the log carefully to see full listing." \
       >/dev/stderr
    exit 1
else
    echo "âœ” Test file build directive linting passed" >/dev/stderr
    exit 0
fi
